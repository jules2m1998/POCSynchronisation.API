
using Refit;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using System.Threading.Tasks;

#nullable enable annotations

namespace Infrastructure.Dapper.Services.Generated
{
    [System.CodeDom.Compiler.GeneratedCode("Refitter", "1.5.5.0")]
    public partial interface IApi
    {
        /// <returns>OK</returns>
        /// <exception cref="ApiException">
        /// Thrown when the request returns a non-success status code:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>400</term>
        /// <description>Bad Request</description>
        /// </item>
        /// <item>
        /// <term>500</term>
        /// <description>Internal Server Error</description>
        /// </item>
        /// </list>
        /// </exception>
        [Headers("Accept: application/json", "Content-Type: application/json")]
        [Post("/api/Synchronisation")]
        Task<SynchronisationResponse> Synchronisation([Body] SynchronisationRequest body);

        /// <returns>OK</returns>
        /// <exception cref="ApiException">Thrown when the request returns a non-success status code.</exception>
        [Headers("Accept: application/json")]
        [Get("/api/Synchronisation/retrieve")]
        Task<ICollection<StoredRetieverDto>> Retrieve();

        /// <returns>OK</returns>
        /// <exception cref="ApiException">Thrown when the request returns a non-success status code.</exception>
        [Headers("Accept: application/json")]
        [Get("/api/Synchronisation/NonSyncedEvents/{lastSyncedId}/{userId}")]
        Task<ICollection<NonSyncEventsDto>> NonSyncedEvents(System.Guid lastSyncedId, System.Guid userId);

        /// <returns>OK</returns>
        /// <exception cref="ApiException">Thrown when the request returns a non-success status code.</exception>
        [Headers("Accept: application/json")]
        [Get("/api/Synchronisation/LastSavedEventId/{userId}")]
        Task<LastSavedEventIdDto> LastSavedEventId(System.Guid userId);


    }

}

//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 649 // Disable "CS0649 Field is never assigned to, and will always have its default value null"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8600 // Disable "CS8600 Converting null literal or possible null value to non-nullable type"
#pragma warning disable 8602 // Disable "CS8602 Dereference of a possibly null reference"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"
#pragma warning disable 8625 // Disable "CS8625 Cannot convert null literal to non-nullable reference type"
#pragma warning disable 8765 // Disable "CS8765 Nullability of type of parameter doesn't match overridden member (possibly because of nullability attributes)."

namespace Infrastructure.Dapper.Services.Generated
{
    using System = global::System;

    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum EventType
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

        _3 = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LastSavedEventIdDto
    {

        [JsonPropertyName("id")]
        public System.Guid? Id { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class NonSyncEventsDto
    {

        [JsonPropertyName("eventType")]
        public string EventType { get; set; }

        [JsonPropertyName("dataType")]
        public string DataType { get; set; }

        [JsonPropertyName("dataJson")]
        public string DataJson { get; set; }

        [JsonPropertyName("conflictWithJson")]
        public string ConflictWithJson { get; set; }

        [JsonPropertyName("eventId")]
        public System.Guid EventId { get; set; }

        [JsonPropertyName("mobileEventId")]
        public System.Guid MobileEventId { get; set; }

        [JsonPropertyName("elementId")]
        public System.Guid ElementId { get; set; }

        [JsonPropertyName("eventStatus")]
        public EventType EventStatus { get; set; }

        [JsonPropertyName("emitedOn")]
        public System.DateTimeOffset EmitedOn { get; set; }

        [JsonPropertyName("savedOn")]
        public System.DateTimeOffset SavedOn { get; set; }

        [JsonPropertyName("lastSyncEvent")]
        public System.Guid LastSyncEvent { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ProblemDetails
    {

        [JsonPropertyName("type")]
        public string Type { get; set; }

        [JsonPropertyName("title")]
        public string Title { get; set; }

        [JsonPropertyName("status")]
        public int? Status { get; set; }

        [JsonPropertyName("detail")]
        public string Detail { get; set; }

        [JsonPropertyName("instance")]
        public string Instance { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class StoredRetieverDto
    {

        [JsonPropertyName("type")]
        public string Type { get; set; }

        [JsonPropertyName("dataJson")]
        public string DataJson { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SynchronisationRequest
    {

        [JsonPropertyName("events")]
        public ICollection<SynchronisedStoredEventDto> Events { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SynchronisationResponse
    {

        [JsonPropertyName("results")]
        public ICollection<SynchronisedStoredEventDto> Results { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SynchronisedStoredEventDto
    {

        [JsonPropertyName("eventType")]
        public string EventType { get; set; }

        [JsonPropertyName("dataType")]
        public string DataType { get; set; }

        [JsonPropertyName("dataJson")]
        public string DataJson { get; set; }

        [JsonPropertyName("conflictWithJson")]
        public string ConflictWithJson { get; set; }

        [JsonPropertyName("eventId")]
        public System.Guid EventId { get; set; }

        [JsonPropertyName("mobileEventId")]
        public System.Guid MobileEventId { get; set; }

        [JsonPropertyName("elementId")]
        public System.Guid ElementId { get; set; }

        [JsonPropertyName("eventStatus")]
        public EventType EventStatus { get; set; }

        [JsonPropertyName("emitedOn")]
        public System.DateTimeOffset EmitedOn { get; set; }

        [JsonPropertyName("savedOn")]
        public System.DateTimeOffset SavedOn { get; set; }

        [JsonPropertyName("lastSyncEvent")]
        public System.Guid LastSyncEvent { get; set; }

    }


}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8600
#pragma warning restore 8602
#pragma warning restore 8603
#pragma warning restore 8604
#pragma warning restore 8625